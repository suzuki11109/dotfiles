# to fix color
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -g detach-on-destroy off

# set new prefix
set -g prefix C-a
unbind C-b 

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 20000

# Increase tmux messages display
set -g display-time 3000

# refresh 'status-left' and 'status-right' more often,
set -g status-interval 5

# emacs key bindings in tmux command prompt 
set -g status-keys emacs

# focus events enabled for terminals
set -g focus-events on

# useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# start windows number at 1
set -g base-index 1 

# don't exit from tmux when closing a session 
set -g detach-on-destroy off  

# use system clipboard
set -g set-clipboard on

# set terminal title
set -g set-titles on 

# rename window to current program
setw -g automatic-rename on 

# renumber windows when a window is closed
set -g renumber-windows on 

# statusbar on top
set -g status-position top 

# statusbar styles
set -g status-left-length 200
set -g status-right                 '#(gitmux -cfg $HOME/.config/tmux/gitmux.conf "#{pane_current_path}") '
set -g status-left                  '#[fg=magenta][#S] '
set -g pane-border-style            'fg=brightblack,bg=default'
set -g pane-active-border-style     'fg=green,bg=default'
set -g status-style                 'bg=default' # transparent
set -g window-status-current-format '#[fg=green]#I:#W'
set -g window-status-format         '#[fg=brightblack]#I:#W'
set -g message-style                'fg=black,bg=green'

# enable mouse scrolling
setw -g mouse on 

# switch tab/window keybindings 
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-] next-window 
bind-key -n M-[ next-window 
bind-key -n M-t new-window -c "#{pane_current_path}"
bind-key -n M-T command-prompt -p "window name:" "new-window; rename-window '%%'"
bind-key -n C-W confirm-before -p "kill this pane? (y/n)" kill-pane # macos should be Super-w
bind-key -n M-S choose-tree 
# bind-key -n M-: command-prompt
bind-key -n M-R source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

bind-key -n M-\" split-window -v -c "#{pane_current_path}"
bind-key -n M-% split-window -h -c "#{pane_current_path}"

# reload shortcut
# bind R source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

# make new windows from current windows path
# bind-key c new-window -c "#{pane_current_path}"

# split windows keys
bind-key \" split-window -v -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"

# kill other panes except current one
bind-key o confirm-before -p "kill other panes? (y/n)" "kill-pane -a"

# open new pane with editor
bind-key e neww -n "editor" "nvim"

# bind-key -n M-d run-shell "~/.config/tmux/switch-to-editor.sh"
#  
# bind-key -n M-\\ if-shell -F '#{==:#{session_name},scratch}' {
#   detach-client
# } {
#   display-popup -E -w 80% -h 80% "tmux new-session -A -s scratch; tmux set status off"
# }

# bind-key -n M-f display-popup -w 80% -h 80% -d "#{pane_current_path}" 

# enable vi mode
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# thmbs 
set -g @thumbs-key f
set -g @thumbs-command 'echo -n {} | wl-copy && tmux display-message \"Copied {}\"'
run-shell ~/.config/tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

# fzf-tmux
# TMUX_FZF_LAUNCH_KEY=""
# TMUX_FZF_OPTIONS="-p -w 68% -h 40% -m"
bind-key -n M-: run-shell -b "~/.config/tmux/plugins/tmux-fzf/scripts/command.sh"
# bind-key -n M-P run-shell -b "~/.config/tmux/plugins/tmux-fzf/main.sh"

# tmux.nvim navigation and resizing keys
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'
bind-key -T copy-mode-vi M-h resize-pane -L 3
bind-key -T copy-mode-vi M-j resize-pane -D 3
bind-key -T copy-mode-vi M-k resize-pane -U 3
bind-key -T copy-mode-vi M-l resize-pane -R 3

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'

# initialize tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'

